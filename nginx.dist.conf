worker_processes 1;
events { worker_connections 1024; }
http {
    sendfile on;
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
 		      application/javascript
                      application/atom+xml
		      
		      #Compresion Api JSON
		      application/json;

    upstream app_servers {
        server 127.0.0.1:8080;
    }

  ##CACHE CONFIG
  #Se agrega configuracion para cachear assets de webturista. El proxy reverso se convierte en un cache server.
  #Estas configuraciones se complementan con las del nginx de web turista que funciona de origin server.
  ############################################################################################################

  ##CACHE CONFIG
  # Se define un perfil de cache donde se setea localizacion, tamanio, y timeout antes de limpiar la cache.
  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=webturista_zone:10m inactive=60m;

  ##CACHE CONFIG
  # Se define el identifacador del recurso que se desea cachear
  proxy_cache_key "$scheme$request_method$host$request_uri";



    # WebTurista
    server {
        listen 80;
        add_header X-RR-Proxy "admin" always;
        server_name turismo.com;

        location / {
            try_files $uri @prerender;
        }

	##CACHE CONFIG
	location ~ /analytics.js {
		proxy_pass https://www.google-analytics.com;
		expires 31536000s;
		proxy_set_header Pragma "public";
		proxy_set_header Cache-Control "max-age=31536000, public";
    	}
	
	##CACHE CONFIG
    	location ~ /maps/api/js {
		proxy_pass https://maps.googleapis.com;
		expires 31536000s;
		proxy_set_header Pragma "public";
		proxy_set_header Cache-Control "max-age=31536000, public";
	    }


        location @prerender {
            #proxy_set_header X-Prerender-Token YOUR_TOKEN;

	##CACHE CONFIG
      	#Se setea el perfil de cache que se va a utilizar. 
     	proxy_cache webturista_zone;

      ##CACHE CONFIG
      #Permite al usuario limpiar la cache bajo demanda
      proxy_cache_bypass $http_cache_control;

	    ##CACHE CONFIG
	    ## Se agrega el header X-Proxy-Cache que informa el estado de la cache. Posibles valores: HIT, MISS, or BYPASS
	    add_header X-Proxy-Cache $upstream_cache_status;

            set $prerender 0;
            if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
                set $prerender 1;
            }
            if ($args ~ "_escaped_fragment_") {
                set $prerender 1;
            }
            if ($http_user_agent ~ "Prerender") {
                set $prerender 0;
            }
            if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
                set $prerender 0;
            }

            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 127.0.0.11 ipv6=off;

            if ($prerender = 1) {
                #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
                set $prerender "prerender:3000";
                rewrite .* /render?userAgent=Prerender&url=$scheme://$host$request_uri? break;
                proxy_pass http://$prerender;
             }
             if ($prerender = 0) {
                rewrite .* $request_uri   break;
                proxy_pass         http://webturista;
             }
        }
    }

    # Api
    server {
        listen 80;
        add_header X-RR-Proxy "admin" always;
        server_name admin.turismo.com;

        location  / {
            proxy_pass         http://admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout       600;
            proxy_send_timeout          600;
            proxy_read_timeout          600;
            send_timeout                600;
        }
    }

    server {
        listen 80;
        add_header X-RR-Proxy "admin" always;
        server_name api.turismo.com;
        client_max_body_size 5M;

        location  / {
            proxy_pass         http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout       600;
            proxy_send_timeout          600;
            proxy_read_timeout          600;
            send_timeout                600;
        }
    }
}
